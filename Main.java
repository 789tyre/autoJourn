
import java.io.*;
import java.nio.charset.Charset;
import java.nio.file.*;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 789tyre (Gavin)
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        newEntry();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        entry = new javax.swing.JTextArea();
        saveB = new javax.swing.JButton();
        signInB = new javax.swing.JToggleButton();
        newEntryB = new javax.swing.JButton();
        fileName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        entry.setColumns(20);
        entry.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        entry.setLineWrap(true);
        entry.setRows(5);
        entry.setTabSize(4);
        entry.setWrapStyleWord(true);
        jScrollPane1.setViewportView(entry);

        saveB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        saveB.setText("Save");
        saveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBActionPerformed(evt);
            }
        });

        signInB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        signInB.setText("Sign In");
        signInB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signInBActionPerformed(evt);
            }
        });

        newEntryB.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        newEntryB.setText("New");
        newEntryB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEntryBActionPerformed(evt);
            }
        });

        fileName.setFont(new java.awt.Font("Monospaced", 0, 20)); // NOI18N
        fileName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fileName.setText("Name of File here.md");
        fileName.setFocusable(false);
        fileName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(signInB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEntryB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveB, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {newEntryB, saveB});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fileName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(signInB)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(newEntryB)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveB))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 674, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void saveBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBActionPerformed
        //Spits out a brand new file name for each entry
        //String pathName = "entries/" + fileName.getText();

        Path path = Paths.get("entries/" + fileName.getText()); //Creates a path variable where we can save the md file

        try {
            Files.createFile(path); // checks if the file exists and creates it if not there
            saveFile(path);
        } catch (FileAlreadyExistsException x) {

            try {
                saveFile(path); // Saves the text in the entry box
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException x) {
            System.err.format("createFile Error: %s%n", x);
        }
    }//GEN-LAST:event_saveBActionPerformed

    private void saveFile(Path path) throws IOException {
        //Will eventually save to Google Drive when there is internet.
        List<String> text = Arrays.asList(entry.getText().split("\\n"));
        Files.write(path, text, Charset.forName("UTF-8"));
    }

    private void newEntryBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEntryBActionPerformed
        newEntry();
    }//GEN-LAST:event_newEntryBActionPerformed

    private void signInBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signInBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_signInBActionPerformed

    private void newEntry() {
        //Puts the date into the first line of the entry box
        Date date = new Date();
        DateFormat dateformatFile = new SimpleDateFormat("yyyMMdd - HHmm");
        DateFormat dateformatEntry = new SimpleDateFormat("##*HH:mm @ dd/MM/yyyy*");
        
        fileName.setText( dateformatFile.format(date) + ".md" ); //Used for saving the entry
        entry.setText(dateformatEntry.format(date)); //Used to put in the actual entry
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea entry;
    private javax.swing.JLabel fileName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newEntryB;
    private javax.swing.JButton saveB;
    private javax.swing.JToggleButton signInB;
    // End of variables declaration//GEN-END:variables
}
